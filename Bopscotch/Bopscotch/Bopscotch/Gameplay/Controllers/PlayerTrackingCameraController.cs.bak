using Microsoft.Xna.Framework;

using Leda.Core.Game_Objects.Controllers.Camera;

namespace Bopscotch.Gameplay.Controllers
{
    public class PlayerTrackingCameraController : MobileObjectTrackingCameraController
    {
        private Objects.Characters.Player.Player _playerToTrack;

        public Objects.Characters.Player.Player PlayerToTrack { set { base.ObjectToTrack = value; _playerToTrack = value; } }

        public PlayerTrackingCameraController()
        {
            SnapSpeed = Scroll_Snap_Speed;
        }

        public void PositionForLevelStart()
        {
            Vector2 startingWorldPosition = Vector2.Zero;

            startingWorldPosition.Y = UpdatePositionWithinWorld(0.0f, _playerToTrack.WorldPosition.Y, -1,
                Data.GameData.CurrentGame.CurrentLevelDimensions.Y, Viewport.Height, ScrollBoundaryViewportFractions.Y, Overspill.Y);


            if (_playerToTrack.IsMovingLeft)
            {
                startingWorldPosition.X = UpdatePositionWithinWorld(0.0f, _playerToTrack.WorldPosition.X, -1,
                    Data.GameData.CurrentGame.CurrentLevelDimensions.X, Viewport.Height, ScrollBoundaryViewportFractions.X, Overspill.X);
            }
            else
            {
                startingWorldPosition.X = UpdatePositionWithinWorld(0.0f, _playerToTrack.WorldPosition.X, 1,
                    Data.GameData.CurrentGame.CurrentLevelDimensions.X, Viewport.Height, ScrollBoundaryViewportFractions.X, Overspill.X);

            }

            WorldPosition = startingWorldPosition;
        }

        private const float Scroll_Snap_Speed = 4.0f;
    }
}
